{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SA4BpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAM,CAACF,WAAUC,SACjBE,EAAgBC,KAAKC,SAAW,GAErC,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC7BC,YAAW,WACLN,EACHI,EAAQL,GAEPM,EAAON,E,GAGRD,E,IApCPL,EAAKc,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAEC,iBAIF,IAFA,IAAIC,EAAQC,OAAOlB,EAAKK,MAAMc,OAEtBC,EAAI,EAAGA,GAAKpB,EAAKqB,OAAOF,MAAOC,IACrCjB,EAAciB,EAAGH,GAChBK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAuCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGvEY,GAASC,OAAOlB,EAAK8B,KAAKX,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\n\n\n\nform.addEventListener('submit', onFormSubmit)\n\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(form.delay.value)\n  \n  for(let i = 1; i <= form.amount.value; i++) {\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n    delay += Number(form.step.value);\n  \n }\n}\n\n\n\nfunction createPromise(position, delay) { \n  const obj = {position, delay}\n  const shouldResolve = Math.random() > 0.3;\n\n   return new Promise ((reselve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n       reselve(obj);\n      } else {\n        reject(obj)\n      }\n        \n    }, delay);\n  });\n\n \n  \n}\n\n\n\n\n// const promis = new Promise ((reselve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if(canFulfill) {\n//       reselve('Промис успешно выполниться, с результатом (исполнен, fulfilled)');\n\n//     }\n\n//     reject('Промис віполниться с ошибкой (отклонён, rejected)')\n//   }, 2000)\n// })\n\n// promis\n// .then(onFulfilld)\n// .then(x => {\n//   console.log(x);\n//   return 10;\n// })\n// .then (y => {\n//   console.log(y)\n// } )\n// .catch(error => console.log(error))\n// .finally(() => console.log(\"Я буду віполнен в любом случае\"))\n\n\n// function onFulfilld (result) {\n//   console.log('onFulfilld -> onFulfilld');\n//   console.log(`Well done ${result}`)\n// }\n\n// function onRejected(error) {\n//   console.log('onRejected -> onRejected')\n//   console.log(`Oh... its not okay ${error}`)\n// }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","reselve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","step"],"version":3,"file":"03-promises.24da1961.js.map"}